import java.lang.reflect.Executable

var heldenTeam = mutableListOf<Helden>(
    `Neo (Auserw√§hlter)`("Neo", 100, 50, 50, 0),
    Morpheus("Morpheus", 100, 50, 50, 0),
    Trinity("Trinity", 100, 50, 50, 0)

)

val neo = heldenTeam[0]
val morpheus = heldenTeam[1]
val trinity = heldenTeam[2]
var level: Int = 1

val green = "\u001B[32m"
val reset = "\u001B[0m"
val rot = "\u001B[31m"
val blau = "\u001B[34m"
val fl√§che = "\u001B[7m"
val boldText = "\u001b[1m"
val white = "\u001b[37m"

fun main() {
    willKommenScreen()
    println()
    Thread.sleep(2000)
    var regestrierterBenutzer = mutableListOf<Pair<String, String>>()
    benutzerRegestrieren(regestrierterBenutzer)
    anmeldung(regestrierterBenutzer)
    starteSpiel(heldenTeam)
    println("Loading.............")
    Thread.sleep(3000)

    val level1Agenten = Agenten("Agent Smith", 50, 20, 20, 0)
    level(heldenTeam, level1Agenten)
    var leve2Agent = Agenten("Agent", 50, 20, 20, 1)
    level(heldenTeam, leve2Agent)
    var level3agent = Agenten("Agent Smith", 50, 20, 30, 2)
    level(heldenTeam, level3agent)
    var w√§chter = W√§chter("W√§chter", 150, 100, 1, 100)
    level(heldenTeam, w√§chter)


}

// Hier ist eine urze Einleitung zum Spiel

fun willKommenScreen (){
   // Diese FunktioprintStament habe ich selber geschreiben um den Film Touch zu bekommen
    var text = "${fl√§che}${green}01010101001010101010101001010101010100101010101\n01010101001010101010101001010101010100101010101\n01010101001010101010101001010101010100101010101\n01010101001010101010101001010101010100101010101\n$reset${boldText}\n${fl√§che}${white}OrakelüîÆ:${reset}\n\nWillkommen in dem RPG Game Matrix. Es ist Zeit den Maschienen einhalt zu gew√§hren\nk√§mpfe dich in alle 4 Levels durch und besiege den End Boss den W√§chter\nW√§hle deine angriffe bedacht der Gegner kann manchen Angriffen ausweichen\nIm von Level 1-3 k√§mpfst du gegen Agent Smith\nSei Vorsichtig er wird jede Runde st√§rker\nDu k√§mpst mit allen 3 Helden und kannst innerhalb der Runden die Helden Wechseln\nDer Endboss ist der W√§chter. Wenn der W√§chter unter 100 LP f√§llt macht er einen m√§chtigen Fl√§chen Angriff\nZeige was du kannst\nNach der registrierung kann es los gehen"
    var verz√∂gert = 40L
    printStatments(text,verz√∂gert)

}

// Hier muss sich der User Registrieren

fun benutzerRegestrieren(
    regestrierterBenutzer: MutableList<Pair<String, String>>
) {
    var text8 = "\n$boldText$fl√§che${green}Willkommen im Spiel Matrix gebe deine Daten ein um dich zu registrieren$reset"
    var verz√∂gert8 = 20L
    printStatments(text8, verz√∂gert8)
    println("\n")
    var text2 = "Bitte geben Sie einen namen ein um sich zu Registrieren"
    var verz√∂gert2 = 30L
    printStatments(text2, verz√∂gert2)
    println()
    var benutzername = readln()
    var text3 = "Bitte geben Sie ein Passwort ein um sich zu Registrieren"
    var verz√∂gert3 = 30L
    printStatments(text3, verz√∂gert3)
    println()
    var passwortReg = readln()
    regestrierterBenutzer.add(benutzername to passwortReg)
    println("${boldText}${fl√§che}${green}Erfolgreich registriert$reset")


}

// Mit den Daten der Registration meldet sich der User An

fun anmeldung(regestrierterBenutzer: MutableList<Pair<String, String>>) {
    println()
    var text4 = "Willkommen im Login der Matrix, gib deine Login Daten ein"
    var verz√∂gert4 = 30L
    printStatments(text4, verz√∂gert4)
    println("\n")
    println("$fl√§che${green}${boldText}Benutzername Login :      $reset")
    var benutzerName = readln()
    println()
    println("$fl√§che${green}${boldText}Passwort Login :    $reset")
    var passWort = readln()

    var benutzer = regestrierterBenutzer.find { it.first == benutzerName && it.second == passWort }
    if (benutzer != null) {
        println()
        println("${boldText}${green}${fl√§che}Login erfolgreich$reset")
        var text6 =
            "${green}0101010101010100101010101010101010100101010101001010101010101001001010101001010101010101010101010101010101\n0101010010101010101001010101001001010101010010101001010101010101010101010101010101010101010101010101010101\n0101001010101010010101010010100101010010101010010101010101010101010010101010010101010101010101010101010101\n0101001010101010100101001010101010010101001010101010101010101010101010101010010101010101010101010101010101$reset"
        var verz√∂gert6 = 20L
        printStatments(text6, verz√∂gert6)
        println("\n")
        var text5 =
            "$fl√§che${white}${boldText}Hallo $benutzerName ich bin das ${green}${fl√§che}OrakelüîÆ$reset Die Gefahr ist gro√ü die Maschienen Stadt mobilisiert$reset\n" +
                    "$fl√§che${white}${boldText}um einen endg√ºltigenAngriff gegen Zion zu f√ºhren ! Du bist unsere letzte Hoffnung$reset"
        var verz√∂gert5 = 30L
        printStatments(text5, verz√∂gert5)
        println()
        Thread.sleep(2000)


    } else {
        println("$fl√§che${rot}${boldText}Login fehlgeschlagen. Bitte √ºberpr√ºfen Sie ihre Eingabe$reset")
        anmeldung(regestrierterBenutzer)
    }


}


fun starteSpiel(helden: MutableList<Helden>) {
    println()
    println("---------------------------------------------------------------------------------")
    try {
        var text7 =
            "$green${fl√§che}Morpheusü•∑üèø$reset : ${boldText}Du suchst mich schon lange ? Ich suche dich mein ganzes Leben\n" +
                    "Du hast die Wahl Auserw√§hlter.......... $reset"
        var verz√∂gert7 = 30L
        printStatments(text7, verz√∂gert7)
        println("\n")
        println(
            """
     ###########################################################################################      
                                                                                               
       $fl√§che$blau$boldText  [1] W√§hlst du die blaue üíä schl√§fst du ein und wachst in deinem Zimmer auf$reset
        
       $fl√§che$rot$boldText   [2] W√§hlst du die rote üíä gehts auf in den Kampf f√ºr Zion$reset
        
    ############################################################################################    
    """.trimIndent()
        )


        var pille = readln().toInt()
        when (pille) {
            1 -> {
                println("Du hast die blaue üíä gew√§hlt schlaf in ruhe und bleibe in der Traumwelt")
                beendeSpiel(heldenTeam)
            }

            2 -> {
                println("${rot}Du hast die rote üíä gew√§hlt : Auf in den Kampf$reset")
                println()
                var text =
                    "${green}Willkommen in der Matrix , w√§hle dein Helden aus und st√ºrze dich in den Kampf gegen die Agenten" +
                            "\nSei vorsichtig und w√§hle bedacht ! Zion vertraut Dir, viel Gl√ºck$reset "
                var verz√∂gert = 50L
                printStatments(text, verz√∂gert)
            }

            else -> {
                println("Ung√ºltige Auswahl ! Bitte gebe die richtige Auswahl ein ")
                starteSpiel(helden)

            }


        }
    } catch (e: Exception) {
        println("Ung√ºltige Eingabe, versuche es erneut")
        starteSpiel(helden)
    }


}


fun beendeSpiel(helden: MutableList<Helden>) {
    if (helden.all { it.health <= 0 }) {


    }
    try {
        println(
            """
        [1] Spiel beenden
        [2] Weiter
    """.trimIndent()
        )

        var eingabe = readln().toInt()
        when (eingabe) {
            1 -> {
                println("Spiel wird beendet")
                var text = "01010101001010101010010101010100101010101010010101010100101010101001010101001\n01010101001010101010010101010100101010101010010101010100101010101001010101001\n01010101001010101010010101010100101010101010010101010100101010101001010101001\n01010101001010101010010101010100101010101010010101010100101010101001010101001"
                var verz√∂gert = 30L
                printStatments(text,verz√∂gert)
            }

            2 -> {
                println("Spiel geht weiter")
                var text2 = "01010101001010101010010101010100101010101010010101010100101010101001010101001\n01010101001010101010010101010100101010101010010101010100101010101001010101001\n01010101001010101010010101010100101010101010010101010100101010101001010101001\n01010101001010101010010101010100101010101010010101010100101010101001010101001"
                var verz√∂gert2 = 30L
                printStatments(text2,verz√∂gert2)
                starteSpiel(helden)
            }

            else -> {
                println("Ung√ºltige eingabe")
                beendeSpiel(helden)
            }

        }
    } catch (e: Exception) {
        println("Ung√ºltige Eingabe, versuchen Sie es nochmal")
        beendeSpiel(helden)
    }


}

// Hier wird nach jeder auswahl des Helden die aktuellen Werte angezeigt

fun showAtributs(helden: Helden) {
    println("\t\t\t${rot}Du hast ${helden.name} gew√§hlt$reset")
    println(
        """
         
                $boldText${white}${fl√§che}Lebenspunkte     :    $boldText${helden.health} LP  $reset
                $boldText${white}${fl√§che}Angriffspunkte   :    $boldText${helden.attack}  DM  $reset
                $boldText${white}${fl√§che}Verteidigung     :    $boldText${helden.save}  DEF $reset
                $boldText${white}${fl√§che}Erfahrungspunkte :    $boldText${helden.exp}   EXP $reset
        
                
                
            """.trimIndent()

    )
    Thread.sleep(1000)
}


fun auswahlCharekter(feind: Feind): Helden? {
    println()
    var text1 = "W√§hle deinen Helden"
    var verz√∂gert1 = 100L
    printStatments(text1, verz√∂gert1)
    println()
    println("..............")
    Thread.sleep(2000)

    println(
        """
            
      ##############################  
      #                            #
      #   [1] Neo                  #
      #   [2] Morpheus             #
      #   [3] Trinity              #
      #                            #
      ##############################
    """.trimIndent()
    )
    try {
        val auswahl = readln().toInt()
        when (auswahl) {
            1 -> {
                if (heldenTeam[0].health != 0) {
                    Thread.sleep(2000)
                    showAtributs(heldenTeam[0])
                    (heldenTeam[0] as `Neo (Auserw√§hlter)`).waffenWahl(feind)
                    heldenTeam[0]


                } else {
                    throw Exception("Held ist nicht mehr verf√ºgbar")

                }
            }

            2 -> {
                if (heldenTeam[1].health != 0) {
                    Thread.sleep(2000)
                    showAtributs(heldenTeam[1])
                    (heldenTeam[1] as Morpheus).waffenAuswahl(feind)
                    heldenTeam[1]

                } else {
                    throw Exception("Held ist nicht mehr Verf√ºgbar")
                }
            }

            3 -> {
                if (heldenTeam[2].health != 0) {
                    Thread.sleep(2000)
                    showAtributs(heldenTeam[2])
                    (heldenTeam[2] as Trinity).waffenAuswahl(feind)
                    heldenTeam[2]

                } else {
                    throw Exception("Held ist nicht mehr Verf√ºgbar")
                }

            }


            else -> throw Exception("${rot}Auswahl ung√ºltig / Es gibt nur 3 Helden . Versuche es erneut$reset!")


        }


    } catch (e: Exception) {
        println(e.message)
        auswahlCharekter(feind)

    }; return null
}

// Darauf bin ich sehr stolz habe es selber geschreiben

fun printStatments(text: String, verz√∂gert: Long) {
    for (char in text) {
        print("$char")
        Thread.sleep(verz√∂gert)
    }

}


fun level(heldenTeam: MutableList<Helden>, agenten: Feind) {

    println("$boldText$fl√§che${rot}Willkomen in Level :$level$reset")

    var level4: Boolean = false
    var w√§chter = agenten as? W√§chter

    while (heldenTeam.any { it.health > 0 } && agenten.health > 0) {
        auswahlCharekter(agenten)
        if (w√§chter is W√§chter && (w√§chter.health < 100)) {
            w√§chter.bombe(heldenTeam)
            level4 = true
        }

        if (heldenTeam.all { it.health <= 0 }) {
            println("\nGame Over")
            beendeSpiel(heldenTeam)
            break


        } else if (agenten.health <= 0) {
            agenten.health = 0
            println("\n${fl√§che}${green}${boldText}Du hast das Level erfolgreich beendet ! Auf ins n√§chste Level$reset")
            level++
            println()
            println("${fl√§che}${green}Loading...........$reset\n")
            Thread.sleep(4000)



            break
        }
        agenten.attack()


    }

    if (level4) {
        println("Ende")
        beendeSpiel(heldenTeam)

    }


}

// Das Orakel ist eine Power Up funktion f√ºr die LP der Helden
fun orakel(held: Helden) {
    if (held.health < 50) {
        var text26 =
            "$fl√§che${white}Orakel\uD83D\uDD2E$reset:$rot${held.name} iss den keks\uD83C\uDF6A du hast nicht mehr genug Energie$reset\n"
        var verz√∂gert26 = 30L
        printStatments(text26, verz√∂gert26)
        println("----------------------------------------------------")
        var eingabe = readln()
        held.health += 50
        println("${fl√§che}${white}OrakelüîÆ${reset}Powerup  :Neue LP :${held.health} LP")

    }


}






